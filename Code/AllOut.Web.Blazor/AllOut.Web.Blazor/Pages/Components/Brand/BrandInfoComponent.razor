@inject IHTTPService _http

@if (showBox)
{
    <!-- Modal -->
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="modal-title">@title</span>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="() => Cancel()"></button>
                </div>
                <div class="modal-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }
                    <div class="mb-3">
                        <label for="name" class="form-label">NAME</label>
                        <input type="text" class="form-control" id="name" @bind="brandInfo.Name">
                    </div>
                    <div class="mb-3">
                        <label for="desc" class="form-label">DESCRIPTION</label>
                        <textarea class="form-control" id="desc" rows="4" @bind="brandInfo.Description"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="() => Save()">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="() => Cancel()">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Brand brandInfo { get; set; }
    private bool showBox { get; set; }
    private string title { get; set; } = string.Empty;
    private string errorMessage { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<Response> BrandInfoResponse { get; set; }

    public void InitializeBrand(Guid? brandID)
    {
        showBox = true;
        StateHasChanged();

        title = "Add Brand";
        brandInfo = new Brand();
        if(brandID != null)
        {
            title = "Edit Brand";
            var response = _http.GetBrandByID(Globals.TEMP_CLIENT_ID, (Guid)brandID);

            if (response.Result != ResponseResult.SUCCESS)
            {
                errorMessage = (string)response.Data;
                return;
            }
            brandInfo = (Brand)response.Data;
        }
    }

    private void Cancel()
    {
        showBox = false;
        BrandInfoResponse.InvokeAsync(null);
    }

    private void Save()
    {
        var isAdd = brandInfo.BrandID == Guid.Empty ? true : false;

        brandInfo.Name = brandInfo.Name == null ? string.Empty : brandInfo.Name.ToUpper();
        brandInfo.Description = brandInfo.Description == null ? string.Empty : brandInfo.Description.ToUpper();
        brandInfo.Status = Constants.STATUS_ENABLED_INT;

        //Prepare Request for Save
        var request = new SaveBrandRequest
        {
            FunctionID = isAdd ? Constants.FUNCTION_ID_ADD_BRAND_BY_ADMIN :
                                    Constants.FUNCTION_ID_CHANGE_BRAND_BY_ADMIN,
            RequestStatus = Constants.REQUEST_STATUS_COMPLETED,
            client = Globals.TEMP_CLIENT,
            inputBrand = brandInfo
        };

        //Send Request for Save
        var response = _http.PostSaveBrand(request);

        //Check Response Result
        if (response.Result != ResponseResult.SUCCESS)
        {
            errorMessage = (string)response.Data;
            return;
        }

        showBox = false;
        BrandInfoResponse.InvokeAsync(response);
    }
}
